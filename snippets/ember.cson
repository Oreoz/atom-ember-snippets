# Ember snippets
#
# Examples
#
#  `ember<tab>`
#

'.source.js':

  #
  # Modules
  #

  'Ember Route':
    'prefix': 'route'
    'body': """
      import Ember from 'ember';

      export default Ember.Route.extend({
        model: function() {
          ${1:// body}
        },
      });
    """

  'Ember Object Controller':
    'prefix': 'controller'
    'body': """
      import Ember from 'ember';

      export default Ember.ObjectController.extend({
        ${1:// body}
      });
    """

  'Ember Array Controller':
    'prefix': 'arr-controller'
    'body': """
      import Ember from 'ember';

      export default Ember.ArrayController.extend({
        ${1:// body}
      });
    """

  'Ember Component':
    'prefix': 'component'
    'body': """
      import Ember from 'ember';

      export default Ember.Component.extend({
        ${1:// body}
      });
    """

  'Ember Mixin':
    'prefix': 'mixin'
    'body': """
      import Ember from 'ember';

      export default Ember.Mixin.create({
        ${1:// body}
      });
    """

  'Ember Generic Extend':
    'prefix': 'extend'
    'body': """
      import Ember from 'ember';

      export default Ember.${1:Class}.extend({
        ${2:// body}
      });
    """

  'Ember Helper':
    'prefix': 'helper'
    'body': """
      import Ember from 'ember';

      export default Ember.Handlebars.makeBoundHelper(function() {
        ${1:// body}
      });
    """

  'Ember View':
    'prefix': 'view'
    'body': """
      import Ember from 'ember';

      var Object = Ember.View.extend({
        ${1:// body}
      });
    """

  'Ember Model':
    'prefix': 'model'
    'body': """
      import DS from 'DS';

      export default DS.Model.extend({
        ${1:// body}
      });
    """

  'Ember REST Adapter':
    'prefix': 'adapter'
    'body': """
      import DS from 'DS';

      export default DS.RESTAdapter.extend({
        ${1:// body}
      });
    """

  'Ember Active Model Adapter':
    'prefix': 'active-adapter'
    'body': """
      import DS from 'DS';

      export default DS.ActiveModelAdapter.extend({
        ${1:// body}
      });
    """

  'Ember REST Serializer':
    'prefix': 'serializer'
    'body': """
      import DS from 'DS';

      export default DS.RESTSerializer.extend({
        ${1:// body}
      });
    """

  'Ember Active Model Serializer':
    'prefix': 'active-serializer'
    'body': """
      import DS from 'DS';

      export default DS.ActiveModelSerializer.extend({
        ${1:// body}
      });
    """

  'Ember Transform Serializer':
    'prefix': 'transform'
    'body': """
      import DS from 'DS';

      export default DS.Transforms.extend({
        ${1:// body}
      });
    """

  'Ember Initializer':
    'prefix': 'initializer'
    'body': """
      export default {
        name: '${1:name}',
        initialize: function() {
          ${2:// body}
        }
      };
    """

  'Ember Utility':
    'prefix': 'utility'
    'body': """
      export default function ${1:myUtility}() {
        ${2:// body}
      };
    """

  #
  # Properties
  #

  'Ember Computed Property':
    'prefix': 'property'
    'body': """
      ${1:fooCount}: function() {
        ${3:// body}
      }.property('${2:property}'),
    """

  'Ember Observer':
    'prefix': 'observes'
    'body': """
      ${1:fooChanged}: function() {
        ${3:// body}
      }.observes('${2:property}'),
    """

  'Ember Actions':
    'prefix': 'actions'
    'body': """
      actions: {
        ${1:// body}
      }
    """

  #
  # Functions
  #

  'Ember Find':
    'prefix': 'find'
    'body': "this.store.find('${1:model}');"

  'Ember Find by id':
    'prefix': 'find-id'
    'body': "this.store.find('${1:model}', params.${1:model}_id);"

  'Ember Logger Debug':
    'prefix': 'logger-debug'
    'body': "Ember.Logger.debug('${1:message}');"

  'Ember Logger Log':
    'prefix': 'logger-log'
    'body': "Ember.Logger.log('${1:message}');"

  'Ember Logger Info':
    'prefix': 'logger-info'
    'body': "Ember.Logger.info('${1:message}');"

  'Ember Logger Warn':
    'prefix': 'logger-warn'
    'body': "Ember.Logger.warn('${1:message}');"

  'Ember Logger Error':
    'prefix': 'logger-error'
    'body': "Ember.Logger.error('${1:message}');"
